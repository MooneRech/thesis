<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lv.animelistapp.mapper.AnimeListMapper">

    <resultMap id="AnimeListMap" type="lv.animelistapp.model.AnimeListModel">
        <result column="id"         property="id"           jdbcType="DECIMAL"/>
        <result column="anime_id"   property="animeId"      jdbcType="DECIMAL"/>
        <result column="title_jp"   property="titleJP"      jdbcType="VARCHAR"/>
        <result column="title_eng"  property="titleEN"      jdbcType="VARCHAR"/>
        <result column="title_lv"   property="titleLV"      jdbcType="VARCHAR"/>
        <result column="type"       property="type"         jdbcType="VARCHAR"/>
        <result column="rating"     property="rating"       jdbcType="VARCHAR"/>
        <result column="usr_status_id" property="userStatusId" jdbcType="DECIMAL"/>
        <result column="usr_status" property="userStatus"   jdbcType="VARCHAR"/>
        <result column="episodes"   property="episodes"     jdbcType="DECIMAL"/>
        <result column="progress"   property="userEpisodes" jdbcType="DECIMAL"/>
        <result column="genres"     property="genresString" jdbcType="VARCHAR"/>
        <result column="tags"       property="tagsString"   jdbcType="VARCHAR"/>
    </resultMap>


    <select id="getAnimeListForDialog" resultMap="AnimeListMap">
        SELECT  lst.id,
                anime.id as anime_id,
                anime.title_jp,
                anime.title_eng,
                anime.title_lv,
                get_cdv_value_by_id(anime.type_id) as type,
                get_cdv_value_by_id(anime.rating_id) as rating,
                anime.episode_count as episodes,
                lst.score,
                lst.progress,
                lst.status_id AS usr_status_id,
                GET_CDV_VALUE_BY_ID(lst.status_id) AS usr_status
        FROM lval_anime_info anime
        LEFT JOIN lval_user_anime_lists lst ON anime.id = lst.anime_id AND lst.user_id = (select id from lval_users where username = #{user})
        WHERE anime.status_id  &lt;&gt;  get_cdv_id_by_value('STATUS','Rediģēšanā')
        ORDER BY anime.title_jp
    </select>

    <select id="getUserAnimeList" parameterType="map" resultMap="AnimeListMap">
        SELECT 	lst.id AS id,
                anime.id AS anime_id,
                anime.title_jp AS title_jp,
                anime.title_eng AS title_eng,
                anime.title_lv AS title_lv,
                lst.score AS score,
                GET_CDV_VALUE_BY_ID(anime.type_id) AS type,
                lst.progress AS progress,
                anime.episode_count AS episodes,
                lst.status_id AS usr_status_id,
                GET_CDV_VALUE_BY_ID(lst.status_id) AS usr_status,
                GET_GENRE_LIST(anime.id) AS genres,
                GET_TAG_LIST(anime.id, lst.user_id) AS tags
        FROM lval_anime_info anime
        JOIN lval_user_anime_lists lst ON anime.id = lst.anime_id
        WHERE lst.user_id = (select id from lval_users where username = #{user})
        <if test="status != null">
            AND get_cdv_value_by_id(lst.status_id) like #{status}
        </if>
        ORDER BY anime.title_jp
    </select>

    <insert id="addToList" parameterType="map" useGeneratedKeys="true" statementType="CALLABLE">
        {call create_animelist_entry (
            #{user_id,  mode=IN,    jdbcType=INTEGER,   javaType=java.lang.Long},
            #{anime_id, mode=IN,    jdbcType=INTEGER,   javaType=java.lang.Long},
            #{progress, mode=IN,    jdbcType=INTEGER,   javaType=java.lang.Integer},
            #{score,    mode=IN,    jdbcType=INTEGER,   javaType=java.lang.Integer},
            #{status_id,mode=IN,    jdbcType=INTEGER,   javaType=java.lang.Long},
            #{p_id,     mode=OUT,   jdbcType=INTEGER,   javaType=java.lang.Long}
        )}

    </insert>

    <update id="updateListEntry" parameterType="map">
        UPDATE lval_user_anime_lists
        SET progress = #{progress},
            score = #{score},
            status_id = #{status_id}
        WHERE id = #{id}
    </update>

    <delete id="deleteAnimeTags" parameterType="map">
        DELETE from lval_user_tags
        WHERE anime_id = #{anime_id} AND user_id = #{user_id}
    </delete>

    <insert id="createAnimeTag" parameterType="map">
        INSERT INTO lval_user_tags
        VALUES (
            #{anime_id},
            #{user_id},
            #{tag}
        )
    </insert>

    <select id="getUserAnimeDetails" parameterType="map" resultMap="AnimeListMap">
        SELECT  lst.id,
                anime.id as anime_id,
                anime.episode_count as episodes,
                lst.score,
                lst.progress,
                lst.status_id AS usr_status_id,
                GET_CDV_VALUE_BY_ID(lst.status_id) AS usr_status
        FROM lval_anime_info anime
        LEFT JOIN lval_user_anime_lists lst ON anime.id = lst.anime_id AND lst.user_id = #{user_id}
        WHERE anime.id = #{anime_id}

    </select>

</mapper>